name: "Terraform Images"

trigger:
  - main

variables: # Set the values on Azure DevOps build vars
  ARM_TENANT_ID: $(TENANT_ID)
  ARM_CLIENT_ID: $(CLIENT_ID)
  ARM_CLIENT_SECRET: $(CLIENT_SECRET)
  ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
jobs:
  - job: Terraform_
    strategy:
      matrix: # If github repo and azure devops project are BOTH Public, the 3 jobs run in parallel. If Private, one at a time
        min_supported_version:
          TERRAFORM_VERSION: "0.15.0"
          AZURERM_PROVIDER: "2.66.0"
          image: "ubuntu-20.04"
        mid_supported_version:
          TERRAFORM_VERSION: "1.0.0"
          AZURERM_PROVIDER: "2.69.0"
          image: "ubuntu-18.04"
        latest_supported_version:
          TERRAFORM_VERSION: "1.0.4"
          AZURERM_PROVIDER: "2.70.0"
          image: "ubuntu-20.04"

    pool:
      vmImage: $(image)

    steps:
      - task: Bash@3
        name: "print_env"
        inputs:
          targetType: "inline"
          script: |
            echo "Terraform_Version is:$TERRAFORM_VERSION"
            echo "Azurerm_Provider is:$AZURERM_PROVIDER"
          workingDirectory: "tests/"

      - task: Bash@3
        name: "docker_build"
        inputs:
          targetType: "inline"
          script: |
            docker build --build-arg TERRAFORM_VERSION=$TERRAFORM_VERSION --build-arg AZURERM_PROVIDER=$AZURERM_PROVIDER -t "$TERRAFORM_VERSION:$AZURERM_PROVIDER" .
          workingDirectory: "tests/"

      - task: Bash@3
        name: "docker_run"
        inputs:
          targetType: "inline"
          script: |
            docker run --name "$TERRAFORM_VERSION" -e ARM_TENANT_ID=$ARM_TENANT_ID -e ARM_CLIENT_ID=$ARM_CLIENT_ID -e ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID "$TERRAFORM_VERSION:$AZURERM_PROVIDER"
            docker cp "$TERRAFORM_VERSION":tests/deployment/test_results/. ./opa/test_results/
            ls -a ./deployment/test_results/
          workingDirectory: "tests/"
